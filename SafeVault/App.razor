@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using SafeVault.Services


<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not Found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

@code {
    private bool IsUserAuthenticated { get; set; }

    // Method to handle authentication status check
    protected override async Task OnInitializedAsync()
    {
        var state = await AuthStateProvider.GetAuthenticationStateAsync(); // Get the authentication state

        if (!state?.User?.Identity?.IsAuthenticated == true)
        {
            // Redirect to login page if the user is not authenticated
            Navigation.NavigateTo("/login");
        }
        else
        {
            IsUserAuthenticated = true;
        }
    }
}
